@model EPMSAppDemo.Models.PiecesOfWork

<style>
    .paginate_button {
        cursor: pointer;
        font-size: large;
        color: black;
    }

    th {
        cursor: pointer;
    }
</style>
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css">

<!-- jQuery -->
<script type="text/javascript" charset="utf8" src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.2.min.js"></script>

<!-- DataTables -->
<script type="text/javascript" charset="utf8" src="http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js"></script>


@{
    ViewBag.Title = "Work";
}

<h2>
    Work
    @foreach (var item in Model.Entries.Take(1))
    {
        <p1 class="notbold">
            (From @Html.DisplayFor(modelItem => item.Record.TimePeriodBegin) To
            @Html.DisplayFor(modelItem => item.Record.TimePeriodEnd))
        </p1>
    }
</h2>

<p style="font-weight:bold; color:#3276b1">
    @foreach (var item in Model.Entries.Take(1))
    {
        
        @item.Record.Employee.FirstName   
    }
    @foreach (var item in Model.Entries.Take(1))
    {

        @item.Record.Employee.LastName
    }
</p>

<table id="table" class="table table-condensed table-hover table-striped">
    <thead>
        <tr>
            <th data-identifier="true" data-column-id="WorkDate">DateCompleted</th>
            <th data-column-id="WorkItem">WorkItem</th>
            <th data-column-id="Description">Description</th>
            <th data-column-id="Project">Project</th>
            <th data-column-id="Category">Category</th>
        </tr>
    </thead>
    @{
        int i = 0;
    }

    <tbody>
        @foreach (var item in Model.Entries)
        {


            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCompleted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkItem)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                @*        <td>
                        <div>
                            <a href="javascript:void(0);" style="display:none" id="button_@(i)" class="button" width="1" height="3">Read More</a>
                            <a href="javascript:void(0);" style="display:none" id="button2_@(i)" class="button" width="1" height="3">Read Less</a>
                        </div>
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                @{
                    i++;
                }
            </tr>
                    }
    </tbody>
</table>

@Html.HiddenFor(modelItem => Model.RecordId)


<p style="padding-top: 20px">
    @foreach (var item in Model.Entries.Take(1))
    {
        if (item.Record.Status == "Submitted") {
        <p almoign="center"><a href="@Url.Action("Create", "Performances", new { id = Model.RecordId }, null)" class="btn btn-success text-center btn-block">Create Performance Page</a></p>
        }
        else if (item.Record.Status == "Satisfactory                                                                                        ")
        {
            <p almoign = "center" ><a href = "@Url.Action("Create", "Performances", new { id = Model.RecordId }, null)" class="btn btn-success btn-block disabled">Record Has Been Graded</a></p>
        }
        else if (item.Record.Status == "Unsatisfactory                                                                                      ")
        {
            <p almoign = "center" ><a href = "@Url.Action("Create", "Performances", new { id = Model.RecordId }, null)" class="btn btn-success btn-block disabled">Record Has Been Graded</a></p>
        }
        else if (item.Record.Status == "Open")
        {
            <p almoign="center"><a href="@Url.Action("Create", "Performances", new { id = Model.RecordId }, null)" class="btn btn-success btn-block disabled">Record Has Not Been Submitted</a></p>
        }
    }



    <p>
        @Html.ActionLink("Back To Employees", "Index", "Employees")
    </p>

<p>
    @Html.ActionLink("Performance Page For Record", "Details", "Performances", new { id = Model.RecordId }, null)
</p>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryui")
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script type="text/javascript">


        //$('#approveButton').click(function () {
        //    if (window.confirm("Are you sure you want to approve?")) {
        //        return true;
        //    }
        //    return false;
        //});

        $(document).ready(function () {
            $('#table_info').hide();
            //$('#table_length').hide();
        });

        //function to show/hide the descriptions that have too much text
        $("table tr td:nth-child(3)").each(function (index) {
            //grab the text within the description
            var description = $(this).html().toString();
            //counter to track the number of times clicked
            var clickCount = 0;
            //if the length is too long then we have to cut it down
            if (description.length > 100) {
                $(this).addClass("pointer");
                $(this).prop('title', 'Read More');
                $(this).html(description.substring(0, 60) + "...")

                if ($(this).click(function () {
                    clickCount++;
                        var as = document.getElementById('table');
                    //var row = as.rows[index + 1];
                    if (Math.abs(clickCount) % 2 == 1) {
                    $(this).prop('title', 'Read Less');

                     $(this).html(description)
                    //row.cells[2].innerHTML = description;
                } else if (clickCount % 2 == 0) {
                    $(this).prop('title', 'Read More');
                     $(this).html(description.substring(0, 60) + "...")
                    //row.cells[2].innerHTML = description.substring(0, 60) + "...";
                }
                }));

            }
        });



        //        //$("#button_" + index).click(function () {
        //        //    $("#button_" + index).hide();
        //        //    $("#button2_" + index).show();
        //        //    var as = document.getElementById('table');
        //        //    var row = as.rows[index + 1];
        //        //    alert(row.cells[2].innerHTML)
        //        //    row.cells[2].innerHTML = description;
        //        //});

        //        //$("#button2_" + index).click(function () {
        //        //    $("#button2_" + index).hide();
        //        //    $("#button_" + index).show();
        //        //    var as = document.getElementById('table');
        //        //    var row = as.rows[index + 1];
        //        //    row.cells[2].innerHTML = description.substring(0, 60) + "...";
        //        //});


        //    });

        //}



        jQuery.extend(jQuery.fn.dataTableExt.oSort, {

            "date-uk-pre": function (a) {

                if (a == null || a == "") {

                    return 0;

                }

                var ukDatea = a.split('/');

                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;

            },



            "date-uk-asc": function (a, b) {

                return ((a < b) ? -1 : ((a > b) ? 1 : 0));

            },



            "date-uk-desc": function (a, b) {

                return ((a < b) ? 1 : ((a > b) ? -1 : 0));

            }

        });

        $("#table").dataTable({

            columnDefs: [

    { type: 'date-uk', targets: 0 }

            ],

            "aaSorting": [[0, "desc"]]


        });




    </script>
