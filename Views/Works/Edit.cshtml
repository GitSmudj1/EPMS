@model EPMSAppDemo.Models.Work

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Work</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DateDue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateDue, new { htmlAttributes = new { @min = Model.tempTimeBegin.ToString("yyyy-MM-dd"), @max = Model.tempTimeEnd.ToString("yyyy-MM-dd"), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateDue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCompleted, new { htmlAttributes = new { @min = Model.tempTimeBegin.ToString("yyyy-MM-dd"), @max = Model.tempTimeEnd.ToString("yyyy-MM-dd"), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateCompleted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkItem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkItem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.HoursWorked)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.HoursRemaining)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.SubmittedDate)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.RowVersion)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Work_Record)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Work_Project, "Work_Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Work_Project", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Work_Project, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Work_Category, "Work_Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Work_Category", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Work_Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Late)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.Work_Record })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
